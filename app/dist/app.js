(function () {
    'use strict';

    var t=function(){function t(t,s,r){var n=this;void 0===r&&(r=0),this.print=function(){return console.table(n.data)},this.rows=t,this.columns=s,this.data=new Array(this.rows).fill(0).map((function(){return new Array(n.columns).fill(r)}));}return t.fromArray=function(s){for(var r=s.length,n=s[0].length||1,i=new t(r,n),a=0;a<r;a++)for(var e=0;e<n;e++)i.data[a][e]=1===n?s[a]:s[a][e];return i},t.toFlatArray=function(t){for(var s=[],r=0;r<t.rows;r++)for(var n=0;n<t.columns;n++)s.push(t.data[r][n]);return s},t.prototype.randomise=function(){this.data=this.data.map((function(t){return t.map((function(){return 2*Math.random()-1}))}));},t.prototype.scale=function(t){this.data=this.data.map((function(s){return s.map((function(s){return s*t}))}));},t.prototype.add=function(s){this.data=this.data.map((function(r,n){return r.map((function(r,i){return r+(s instanceof t?s.data[n][i]:s)}))}));},t.prototype.subtract=function(t){this.data=this.data.map((function(s,r){return s.map((function(s,n){return s-("number"==typeof t?t:t.data[r][n])}))}));},t.subtract=function(s,r){if(s.rows===r.rows||s.columns===r.rows){for(var n=new t(s.rows,s.columns),i=0;i<n.rows;i++)for(var a=0;a<n.columns;a++)n.data[i][a]=s.data[i][a]-r.data[i][a];return n}console.error("columns must match columns");},t.multiply=function(s,r){if(s.columns===r.rows){for(var n=new t(s.rows,r.columns),i=0;i<n.rows;i++)for(var a=0;a<n.columns;a++){for(var e=0,o=0;o<s.columns;o++)e+=s.data[i][o]*r.data[o][a];n.data[i][a]=e;}return n}console.error("columns must match columns");},t.prototype.multiply=function(t){for(var s=0;s<this.rows;s++)for(var r=0;r<this.columns;r++)this.data[s][r]*=t.data[s][r];},t.map=function(s,r){var n=new t(s.rows,s.columns);return n.data=s.data.map((function(t){return t.map((function(t){return r(t)}))})),n},t.prototype.map=function(t){this.data=this.data.map((function(s){return s.map((function(s){return t(s)}))}));},t.transpose=function(s){for(var r=new t(s.columns,s.rows),n=0;n<s.rows;n++)for(var i=0;i<s.columns;i++)r.data[i][n]=s.data[n][i];return r},t.prototype.transpose=function(){for(var s=new t(this.columns,this.rows),r=0;r<this.rows;r++)for(var n=0;n<this.columns;n++)s.data[n][r]=this.data[r][n];return s},t.prototype.copy=function(){for(var s=new t(this.rows,this.columns),r=0;r<this.rows;r++)for(var n=0;n<this.columns;n++)s.data[r][n]=this.data[r][n];return s},t.deserialise=function(s){var r=new t(s.rows,s.columns);return r.data=s.data,r},t}(),s=function(t){return 1/(1+Math.exp(-t))},r=function(t){return t*(1-t)},n=function(){function n(s,r,n){var i=this;this.hiddenLayers=[],this.weights=[],this.biases=[],this.serialise=function(){return JSON.stringify(i)},this.inputs=s,this.hiddenLayerArray=r,this.hiddenLayerCount=r.length,this.outputs=n,this.learningRate=.2,this.weights.push(new t(r[0],s)),this.weights[0].randomise();for(var a=0;a<r.length;a++)a+1<r.length&&(this.weights.push(new t(r[a+1],r[a])),this.weights[a+1].randomise()),this.biases.push(new t(r[a],1)),this.biases[a].randomise();this.weights.push(new t(n,r[r.length-1])),this.weights[this.weights.length-1].randomise(),this.biases.push(new t(n,1)),this.biases[this.biases.length-1].randomise(),this.weights_ho=new t(n,r[r.length-1]),this.weights_ho.randomise(),this.bias_o=new t(n,1),this.bias_o.randomise();}return n.prototype.train=function(s,n){var i=this.predict(s),a=t.fromArray(s),e=t.fromArray(i),o=t.fromArray(n),h=t.subtract(o,e),u=t.map(this.generatedOutputs,r);u.multiply(h),u.scale(this.learningRate);var d=t.transpose(this.hiddenLayers[this.hiddenLayers.length-1]),l=t.multiply(u,d);this.weights[this.weights.length-1].add(l),this.biases[this.biases.length-1].add(u);for(var c=h,p=null,f=this.hiddenLayers.length-1;f>-1;f--){var m=t.transpose(this.weights[f+1]);c=t.multiply(m,c),(p=t.map(this.hiddenLayers[f],r)).multiply(c),p.scale(this.learningRate);var w=t.transpose(f>=1?this.hiddenLayers[f-1]:a),y=t.multiply(p,w);this.weights[f].add(y),this.biases[f].add(p);}},n.prototype.predict=function(r){for(var n=t.fromArray(r),i=0;i<this.hiddenLayerCount;i++)this.hiddenLayers[i]=t.multiply(this.weights[i],0===i?n:this.hiddenLayers[i-1]),this.hiddenLayers[i].add(this.biases[i]),this.hiddenLayers[i].map(s);return this.generatedOutputs=t.multiply(this.weights[this.weights.length-1],this.hiddenLayers[this.hiddenLayerCount-1]),this.generatedOutputs.add(this.biases[this.biases.length-1]),this.generatedOutputs.map(s),t.toFlatArray(this.generatedOutputs)},n.deserialise=function(s){var r=new n(s.inputs,s.hiddenLayerArray,s.outputs);return r.hiddenLayers=s.hiddenLayers.map((function(s){return t.deserialise(s)})),r.weights=s.weights.map((function(s){return t.deserialise(s)})),r.biases=s.biases.map((function(s){return t.deserialise(s)})),r.learningRate=s.learningRate,r},n}();

    var containerElement = document.getElementById('p5-container');
    var trainButton = document.getElementById('train-btn');
    var testButton = document.getElementById('test-btn');
    var guessButton = document.getElementById('guess-btn');
    var clearButton = document.getElementById('clear-btn');
    var saveButton = document.getElementById('save-btn');
    var loadButton = document.getElementById('load-btn');
    var sketch = function (p) {
        var len = 784;
        var cats_data;
        var cars_data;
        var carrots_data;
        var cats = { training: [], testing: [] };
        var cars = { training: [], testing: [] };
        var carrots = { training: [], testing: [] };
        var CAT = 0;
        var CAR = 1;
        var CARROT = 2;
        var classification = ['Cat', 'Car', 'Carrot'];
        var nn;
        var training = [];
        var testing = [];
        function prepData(obj, bytes, label) {
            obj.training = [];
            obj.testing = [];
            var images = 100000;
            for (var i = 0; i < images; i++) {
                var offset = i * len;
                var threshold = Math.floor(images * 0.8);
                if (i < threshold) {
                    obj.training[i] = bytes.bytes.subarray(offset, offset + len);
                    obj.training[i].label = label;
                }
                else {
                    obj.testing[i - threshold] = bytes.bytes.subarray(offset, offset + len);
                    obj.testing[i - threshold].label = label;
                }
            }
        }
        p.preload = function () {
            cats_data = p.loadBytes('./data/cats.bin');
            cars_data = p.loadBytes('./data/cars.bin');
            carrots_data = p.loadBytes('./data/carrots.bin');
        };
        var train = function () {
            p.shuffle(training, true);
            var percent = 0;
            var iterations = training.length;
            for (var i = 0; i < iterations; i++) {
                if ((i / iterations) * 100 > percent + 1) {
                    console.clear();
                    console.log(Math.floor((i / iterations) * 100) + "%");
                    percent = (i / iterations) * 100;
                }
                var inputs = [];
                var data = training[i];
                for (var j = 0; j < data.length; j++) {
                    inputs[j] = data[j] / 255.0;
                }
                var targets = [0, 0, 0];
                var label = training[i].label;
                targets[label] = 1;
                nn.train(inputs, targets);
            }
            console.clear();
            console.log('Training completed');
        };
        var test = function () {
            var correct = 0;
            var iterations = testing.length;
            console.log('testing...');
            for (var i = 0; i < iterations; i++) {
                var data = testing[i];
                var inputs = data.map(function (x) { return x / 255.0; });
                var label = testing[i].label;
                var guess_1 = nn.predict(inputs);
                var m = p.max(guess_1);
                var classification_1 = guess_1.indexOf(m);
                if (classification_1 === label) {
                    correct++;
                }
            }
            var percent = correct / iterations;
            console.clear();
            console.log(percent);
        };
        var guess = function () {
            var inputs = [];
            var img = p.get();
            img.resize(28, 28);
            img.loadPixels();
            for (var i = 0; i < len; i++) {
                var alpha = img.pixels[i * 4];
                inputs[i] = (255 - alpha) / 255.0;
            }
            var guess = nn.predict(inputs);
            var m = p.max(guess);
            console.log(classification[guess.indexOf(m)]);
        };
        var clear = function () {
            p.clear();
            p.createCanvas(280, 280);
            p.background(255);
        };
        var save = function () {
            p.saveJSON(nn, 'brain');
        };
        var load = function () {
            var data = p.loadJSON('./data/brain.json');
            setTimeout(function () { return (nn = n.deserialise(data)); }, 250);
            console.log('Loaded and ready!');
        };
        p.setup = function () {
            trainButton.addEventListener('click', train);
            testButton.addEventListener('click', test);
            guessButton.addEventListener('click', guess);
            clearButton.addEventListener('click', clear);
            saveButton.addEventListener('click', save);
            loadButton.addEventListener('click', load);
            prepData(cats, cats_data, CAT);
            prepData(cars, cars_data, CAR);
            prepData(carrots, carrots_data, CARROT);
            // nn = new NeuralNetwork(784, [786], 3)
            // nn = new NeuralNetwork(2, [2, 3], 3)
            training = training.concat(cats.training);
            training = training.concat(cars.training);
            training = training.concat(carrots.training);
            testing = testing.concat(cats.testing);
            testing = testing.concat(cars.testing);
            testing = testing.concat(carrots.testing);
            p.createCanvas(280, 280);
            p.background(255);
        };
        p.draw = function () {
            p.strokeWeight(8);
            p.stroke(0);
            if (p.mouseIsPressed) {
                p.line(p.pmouseX, p.pmouseY, p.mouseX, p.mouseY);
            }
        };
    };
    new p5(sketch, containerElement);

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
